services:
  app1: &app
    build:
      context: app/
    command: python main.py 
    volumes:
      - ./app:/app
    # network_mode: host
    # expose:
    #   - "8000"
    restart: always
    environment:
      # DB_HOST: localhost
      DB_HOST: db
      DB_NAME: rinha
      DB_USER: admin
      DB_PASS: 123
      # PORT: 8000
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.37'
          memory: '160MB'

  app2: 
    <<: *app
    # expose: 
    #   - "8001"
    # environment:
    #   PORT: 8001

  proxy:
    image: nginx
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app1
      - app2
    # expose:
    #   - "9999"
    # network_mode: host
    ports: 
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '30MB'

  db:
    image: postgres
    command: postgres -c max_connections=100 -c work_mem=4MB -c maintenance_work_mem=16MB -c effective_cache_size=128MB -c checkpoint_completion_target=0.5 -c shared_buffers=64MB -c synchronous_commit=off -c fsync=off -c full_page_writes=off -c checkpoint_timeout=600 -c max_wal_size=4096
    volumes:
      - ./db/script.sql:/docker-entrypoint-initdb.d/script.sql
    environment:
      POSTGRES_DB: rinha
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 123
    # network_mode: host
    # expose:
    #   - "5432"
    deploy:
      resources:
        limits:
          cpus: '0.56'
          memory: '200MB'
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U admin -d rinha'"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s

